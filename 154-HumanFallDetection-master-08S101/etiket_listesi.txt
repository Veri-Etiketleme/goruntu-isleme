Python
    pandas(pd)
    torch
        nn
            Module
            LSTM
            Linear
        load
        max
        Tensor
        multiprocessing(mp)
            set_start_method
            Event
            Queue
            Value
            Process
    visual(vis)
        write_on_image
        visualise
        activity_dict
        visualise_tracking
        CocoPart
            LEar
            REye
            LShoulder
            RShoulder
            LHip
            RHip
            LKnee
            RKnee
        processor     
        inv_pendulum
    numpy(np)
        linalg
            norm
        empty_like
        dot
        array
        zeros
        min
        max
        asarray
        math
            atan2
            pi
        dot
        sqrt
        sin
        sum
        ndarray
        any
    helpers    
        pop_and_add
        last_ip
        dist
        move_figure
        get_hist
    default_params
    base64
    io
    time
    openpifpaf  
        network
            Factory
                cli
        decoder
            configure
    PIL
        Image
            fromarray
            BICUBIC
            ImageDraw
                Draw
                    polygon
            new
    enum
        IntEnum
        unique
    typing
        List
    cv2
        copyMakeBorder
        BORDER_CONSTANT
        putText
        FONT_HERSHEY_SIMPLEX
        line
        VideoCapture
        cvtColor
        resize
        COLOR_BGR2HSV
        polylines
        rectangle
        VideoWriter
        VideoWriter_fourcc
        compareHist
        HISTCMP_CORREL
        namedWindow
        normalize
        waitKey
        getWindowProperty
        NORM_L1
        calcHist
        WND_PROP_VISIBLE
        imshow
    logging
        debug
    default_params
    re
        findall
    scipy
        signal
            savgol_filter
            lfilter
    model
        LSTMModel
    argparse
        ArgumentParser
        ArgumentDefaultsHelpFormatter
    matplotlib
        pyplot(plt)
        get_backend    
    fall_detector
    sys
        argv
    os
        path
            exists
    joblib
        dump
Functions
    import
    as
    return
    if
    continue
    for 
    in 
    else
    assert
    while
    not 
    elif
    try
    pass
    break
    del 
